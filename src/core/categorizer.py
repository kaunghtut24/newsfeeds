
from typing import List, Dict

class Categorizer:
    def __init__(self):
        self.categories = {
            "Business": ["business", "finance", "economy", "market", "investment", "company", "ceo", "entrepreneur", "trade", "stock", "earning", "merger", "acquisition", "venture capital", "fund", "funding", "ipo", "revenue", "profit", "loss", "growth", "strategy", "management", "corporate", "industry", "report", "analyst", "bank", "banking", "loan", "credit", "debt", "tax", "regulation", "policy", "consumer", "retail", "e-commerce", "supply chain", "logistics", "manufacturing", "production", "export", "import", "gdp", "inflation", "recession", "interest rate", "central bank", "fiscal", "monetary", "startup", "techfin", "fintech", "proptech", "edtech", "agritech", "insurtech", "unicorn", "valuation", "round", "series a", "series b", "seed funding", "angel investor"],
            "Market": ["market", "stock", "trading", "economy", "finance", "investment", "shares", "indices", "commodities", "forex", "cryptocurrency", "bitcoin", "ethereum", "nasdaq", "dow jones", "s&p", "bse", "nse", "sensex", "nifty", "bond", "yield", "portfolio", "broker", "trader", "bull", "bear", "volatility", "liquidity", "ipo", "public offering", "valuation", "equity", "debt market", "capital market", "futures", "options", "derivatives", "hedge fund", "mutual fund", "etf", "dividend", "earnings", "quarterly results", "market cap", "price target", "analyst rating"],
            "Technology": ["tech", "technology", "ai", "software", "hardware", "innovation", "cybersecurity", "gadget", "internet", "web", "app", "developer", "programming", "coding", "machine learning", "data science", "blockchain", "cloud", "robotics", "quantum computing", "metaverse", "virtual reality", "augmented reality", "semiconductor", "chip", "processor", "network", "telecom", "5g", "6g", "biometric", "deep learning", "neural network", "algorithm", "automation", "digital", "platform", "api", "open source", "big data", "analytics", "computing", "server", "database", "mobile", "wearable", "smart home", "iot", "drone", "space tech", "biotech", "saas", "paas", "iaas", "devops", "agile", "scrum", "github", "stackoverflow", "silicon valley"],
            "Cryptocurrency": ["cryptocurrency", "crypto", "bitcoin", "ethereum", "blockchain", "defi", "nft", "web3", "dao", "smart contract", "mining", "staking", "yield farming", "liquidity pool", "dex", "cex", "wallet", "metamask", "coinbase", "binance", "solana", "cardano", "polygon", "avalanche", "chainlink", "uniswap", "opensea", "altcoin", "stablecoin", "usdc", "usdt", "dogecoin", "shiba inu", "metaverse token", "gamefi", "play to earn"],
            "Health": ["health", "medical", "medicine", "disease", "cure", "hospital", "doctor", "patient", "research", "pharma", "biotech", "wellness", "fitness", "nutrition", "vaccine", "virus", "pandemic", "epidemic", "therapy", "drug", "clinical trial", "healthcare", "insurance", "public health", "mental health", "diagnosis", "treatment", "surgery", "clinic", "hospital", "patient care", "medical device", "genomics", "crispr", "longevity", "telemedicine", "digital health", "wearable health", "precision medicine", "immunotherapy", "gene therapy"],
            "Sports": ["sport", "football", "basketball", "soccer", "tennis", "olympics", "athlete", "game", "match", "league", "championship", "team", "player", "coach", "tournament", "cup", "medal", "record", "training", "fitness", "injury", "stadium", "fan", "club", "premier league", "nba", "fifa", "ipl", "cricket", "formula 1", "golf", "boxing", "mma", "athletics", "swimming", "gymnastics", "winter sports", "extreme sports", "esports", "gaming tournament", "world cup", "super bowl", "champions league", "transfer", "contract"],
            "Science": ["science", "research", "discovery", "physics", "chemistry", "biology", "astronomy", "space", "environment", "climate", "genetics", "evolution", "universe", "galaxy", "planet", "star", "experiment", "theory", "data", "analysis", "lab", "laboratory", "innovation", "breakthrough", "ecology", "geology", "meteorology", "oceanography", "paleontology", "zoology", "botany", "quantum", "particle", "cosmos", "biodiversity", "conservation", "sustainability", "renewable energy", "fusion", "nuclear", "material science", "nanotechnology", "climate change", "global warming", "carbon footprint", "green energy", "solar power", "wind energy"],
            "Politics": ["politics", "government", "election", "democracy", "policy", "law", "parliament", "president", "prime minister", "diplomacy", "international relations", "vote", "campaign", "legislature", "judiciary", "executive", "constitution", "bill", "act", "treaty", "summit", "protest", "activism", "human rights", "justice", "security", "defense", "foreign policy", "domestic policy", "public service", "senate", "congress", "house", "court", "supreme court", "legislation", "geopolitics", "national security", "election commission", "political party", "leader", "minister", "ambassador", "referendum", "impeachment", "sanctions", "trade war"],
            "Entertainment": ["entertainment", "movie", "film", "music", "celebrity", "hollywood", "art", "culture", "tv", "show", "series", "actor", "actress", "director", "artist", "album", "song", "concert", "festival", "theater", "broadway", "gallery", "museum", "fashion", "design", "gaming", "esports", "streaming", "youtube", "tiktok", "netflix", "disney", "warner bros", "media", "pop culture", "celebrity news", "red carpet", "awards", "oscar", "grammy", "emmy", "golden globe", "box office", "premiere", "trailer", "soundtrack", "influencer", "viral", "meme"],
            "Education": ["education", "school", "university", "college", "student", "teacher", "professor", "learning", "curriculum", "degree", "graduation", "scholarship", "tuition", "online learning", "e-learning", "mooc", "coursera", "udemy", "khan academy", "edtech", "classroom", "exam", "test", "grade", "academic", "research", "thesis", "dissertation", "campus", "admission", "enrollment", "literacy", "skill development", "training", "certification"],
            "Environment": ["environment", "climate", "sustainability", "green", "eco", "renewable", "carbon", "emission", "pollution", "conservation", "biodiversity", "ecosystem", "wildlife", "forest", "ocean", "recycling", "waste", "plastic", "solar", "wind", "electric vehicle", "ev", "tesla", "clean energy", "global warming", "climate change", "paris agreement", "cop", "environmental protection", "nature", "earth day", "green technology"],
            "Automotive": ["automotive", "car", "vehicle", "auto", "tesla", "electric vehicle", "ev", "hybrid", "autonomous", "self-driving", "ford", "gm", "toyota", "volkswagen", "bmw", "mercedes", "audi", "porsche", "ferrari", "lamborghini", "motorcycle", "truck", "suv", "sedan", "coupe", "convertible", "racing", "formula 1", "nascar", "dealership", "manufacturing", "assembly line", "recall", "safety", "crash test"],
            "Real Estate": ["real estate", "property", "housing", "home", "house", "apartment", "condo", "rent", "mortgage", "loan", "interest rate", "property value", "market price", "listing", "broker", "agent", "realtor", "commercial property", "residential", "investment property", "reit", "construction", "development", "zoning", "property tax", "foreclosure", "refinance", "down payment", "closing", "escrow"],
            "Food & Beverage": ["food", "restaurant", "dining", "cuisine", "chef", "cooking", "recipe", "beverage", "drink", "coffee", "tea", "wine", "beer", "alcohol", "bar", "pub", "fast food", "delivery", "takeout", "uber eats", "doordash", "grubhub", "michelin", "food truck", "catering", "organic", "vegan", "vegetarian", "nutrition", "diet", "health food", "grocery", "supermarket", "agriculture", "farming"],
            "Travel & Tourism": ["travel", "tourism", "vacation", "holiday", "trip", "flight", "airline", "airport", "hotel", "resort", "booking", "airbnb", "expedia", "booking.com", "destination", "cruise", "train", "bus", "car rental", "visa", "passport", "immigration", "customs", "luggage", "backpacking", "adventure", "sightseeing", "tour", "guide", "hospitality", "travel ban", "border", "quarantine"],
            "Energy": ["energy", "oil", "gas", "petroleum", "renewable", "solar", "wind", "nuclear", "coal", "electricity", "power", "grid", "utility", "pipeline", "refinery", "drilling", "fracking", "opec", "crude oil", "natural gas", "lng", "battery", "storage", "hydroelectric", "geothermal", "biomass", "carbon capture", "energy efficiency", "smart grid", "power plant"],
            "World News": ["world", "global", "international", "country", "nation", "conflict", "crisis", "war", "peace", "humanitarian", "diplomacy", "united nations", "geopolitics", "refugee", "migration", "disaster", "natural disaster", "summit", "treaty", "alliance", "sanction", "embassy", "ambassador", "foreign affairs", "unrest", "protest", "coup", "terrorism", "security council", "g7", "g20", "nato", "eu", "africa", "asia", "europe", "americas", "middle east", "oceania", "brexit", "trade deal", "border dispute"],
            "General": [] # Default category if no match is found
        }

    def categorize_news(self, news_item: Dict) -> str:
        """Categorizes a news item based on its title and full text."""
        text_to_categorize = (news_item.get('title', '') + " " + news_item.get('full_text', '')).lower()

        # Prioritize more specific categories first
        priority_categories = [
            "Cryptocurrency", "Market", "Business", "Technology", "Health",
            "Sports", "Science", "Politics", "Entertainment", "Education",
            "Environment", "Automotive", "Real Estate", "Food & Beverage",
            "Travel & Tourism", "Energy", "World News"
        ]

        for category in priority_categories:
            keywords = self.categories[category]
            for keyword in keywords:
                if keyword in text_to_categorize:
                    return category
        return "General"
